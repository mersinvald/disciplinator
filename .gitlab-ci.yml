stages:
  - test
  - build
  - image
  - push
  - deploy

variables:
  CACHE_DIR: ${CI_PROJECT_DIR}/rust_build_cache/${CI_JOB_NAME}
  CARGO_HOME: ${CI_PROJECT_DIR}/cargo_home

before_script:
  - deploy/rust_build_cache.sh load $CACHE_DIR $CI_PROJECT_DIR || echo "continuing without cache"
after_script:
  - deploy/rust_build_cache.sh save $CI_PROJECT_DIR $CACHE_DIR && echo "cache saved"

test:
  image: rustlang/rust:nightly
  stage: test
  script:
    - cargo test --all
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - $CACHE_DIR
      - $CARGO_HOME

headmaster-build:
  image: registry.gitlab.com/rust_musl_docker/image:nightly-2019-01-13
  stage: build
  script:
    - cd headmaster
    - sed -i 's/\[dependencies\]/[dependencies]\nopenssl = "*"/' Cargo.toml
    - cargo build --release --target=x86_64-unknown-linux-musl
    - cd $CI_PROJECT_DIR
    - cp target/x86_64-unknown-linux-musl/release/headmaster-bin ./
    - du -sh headmaster-bin && du -sh headmaster/migrations
  artifacts:
    paths:
      - headmaster-bin
      - headmaster/migrations
    expire_in: 1 hour
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - $CACHE_DIR
      - $CARGO_HOME

diesel-build:
  image: registry.gitlab.com/rust_musl_docker/image:nightly-2019-01-13
  stage: build
  # disable cache pulling before script as it needs to be done after cloning
  before_script: []
  script:
    - mkdir diesel_build && cd diesel_build
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.ttyv.ru/mersinvald/diesel.git
    - $CI_PROJECT_DIR/deploy/rust_build_cache.sh load $CACHE_DIR $CI_PROJECT_DIR || echo "continuing without cache"
    - cd diesel/diesel_cli
    - git checkout disciplinator-ci
    - cargo build --release --target=x86_64-unknown-linux-musl --no-default-features --features "postgres"
    - cd $CI_PROJECT_DIR
    - cp diesel_build/diesel/target/x86_64-unknown-linux-musl/release/diesel ./
    - du -sh diesel
  artifacts:
    paths:
      - diesel
    expire_in: 1 hour
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - $CACHE_DIR
      - $CARGO_HOME

image-build:
  stage: image
  dependencies:
    - diesel-build
    - headmaster-build
  script:
    - docker build --no-cache -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -f deploy/Dockerfile.gitlab-ci ./
  cache: {}

image-push-gitlab:
  stage: push
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:latest
  cache: {}

image-push-dockerhub:
  stage: push
  only:
    - master
  script:
    - echo $DOCKERHUB_PASSWD | docker login -u $DOCKERHUB_USERNAME --password-stdin
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME $DOCKERHUB_USERNAME/headmaster:latest
    - docker push $DOCKERHUB_USERNAME/headmaster:latest
  cache: {}

image-peploy:
  stage: deploy
  only:
    - master
    - actix
  tags:
    - cd
  script:
      ansible-playbook /etc/ansible/playbooks/docker.yml -l web --tags disciplinator
  cache: {}
